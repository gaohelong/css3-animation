@import "../core";

.container {
    @include perspective(1000px); // 设置透视距离.
}

.piece-box {
    position: relative;
    width: 200px;
    height: 150px;
    margin: 100px auto;
    perspective-origin: 50% 50%;                    // 第一个数值是3D元素所基于的X轴，第二个定义在y轴上的位置.
    @include transform-style(preserve-3d);          // 设置元素为3D变换.
    @include animation(pieceRotate ease 5s);        // 设置执行动画的名称及动画时间.
    @include animation-fill-mode(forwards);         // 设置动画.
    @include animation-iteration-count(infinite);   // 设置动画循环次数.
    &:hover {
        @include animation-play-state(paused);
    }
}

.piece {
    position: absolute;
    width: 200px;
    height: 150px;
    background: red;
    opacity: 0.5;
}

@for $piece-i from 1 to 7 {
    .piece-#{$piece-i} {
        @include create-transform($rotate-y: degVal($piece-i - 1), $trans-z: $piece);

        @if $piece-i == 1 {
            background: #ff6666;
        } @else if $piece-i == 2 {
            background: #ffff00;
        } @else if $piece-i == 3 {
            background: #006699;
        } @else if $piece-i == 4 {
            background: #009999;
        } @else if $piece-i == 5 {
            background: #ff0033;
        } @else {
            background: #ff6600;
        }

        &:hover {
            @include create-transform($rotate-y: degVal($piece-i - 1), $trans-z: $piece, $scale-x: 1, $scale-y: 1.5, $scale-z: 1);
        }
    }
}

@include keyframes(pieceRotate) {
    0% {
        @include transform(rotateY(0deg));
    }
    100% {
        @include transform(rotateY(360deg));
    }
}

//【正方形】
.piece-box2 {
    position: relative;
    width: 200px;
    height: 200px;
    margin: 100px auto;
    perspective-origin: 50% 50%;                    // 第一个数值是3D元素所基于的X轴，第二个定义在y轴上的位置.
    @include transform-style(preserve-3d);          // 设置元素为3D变换.
    @include animation(pieceRotate2 linear 5s);     // 设置执行动画的名称及动画时间.
    @include animation-fill-mode(forwards);         // 设置动画.
    @include animation-iteration-count(infinite);   // 设置动画循环次数.
    &:hover {
        @include animation-play-state(paused);
    }
}

.piece2 {
    position: absolute;
    width: 200px;
    height: 200px;
    background: red;
    opacity: 0.5;
}

@for $piece-i2 from 1 to 7 {
    $deg: 90deg;
    .piece2-#{$piece-i2} {
        @if $piece-i2 < 5 {
            @include create-transform($rotate-y: degVal($piece-i2 - 1, $deg), $trans-z: $piece2);
        } @else if $piece-i2 == 5 {
            @include create-transform($rotate-x: degVal(1, $deg), $trans-z: $piece2);
        } @else if $piece-i2 == 6 {
            @include create-transform($rotate-x: degVal(1, -$deg), $trans-z: $piece2);
        }

        @if $piece-i2 == 1 {
            background: #ff6666;
        } @else if $piece-i2 == 2 {
            background: #ffff00;
        } @else if $piece-i2 == 3 {
            background: #006699;
        } @else if $piece-i2 == 4 {
            background: #009999;
        } @else if $piece-i2 == 5 {
            background: #ff0033;
        } @else {
            background: #ff6600;
        }
    }
}

@include keyframes(pieceRotate2) {
    0% {
        @include transform(rotateY(0deg));
    }
    100% {
        @include transform(rotateY(360deg));
    }
}

//【眼睛】
.post-header-container {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: #eef
}

.bubble-holder {
    width: 24em;
    height: 24em;
    position: absolute;
    margin: 20px;
    top: -50%;
    left: 50%;
    transform: translateX(-75%);
    animation: move-bubble 15s linear infinite;
    transform-origin: -200% 200%;
    opacity: 0;

    &.two {
        transform-origin: -300% -100%;
        top: 20%;
        left: 70%;
    }
    &.three {
        transform-origin: 200% 200%;
        left: 30%;
    }
}

// 制作眼睛.
.eye-holder {
    width: 20em;
    height: 20em;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);

    .ball {
        background: radial-gradient(circle at 50% 40%,#fcfcfc,#efeff1 66%,#9b5050 100%)
    }
}

.iris {
    width: 40%;
    height: 40%;
    margin: 30%;
    border-radius: 50%;
    background: radial-gradient(circle at 50% 50%,#208ab4 0%,#6fbfff 30%,#4381b2 100%);
    transform: translateX(68px) translateY(-60px) skewX(15deg) skewY(2deg);
    position: absolute;
    animation: move-eye-skew 5s ease-out infinite;

    &:before,
    &:after {
        content:"";
        position: absolute;
        border-radius: 50%;
    }
    &:before {
        width: 37.5%;
        height: 37.5%;
        top: 31.25%;
        left: 31.25%;
        background: black
    }
    &:after {
        width: 31.25%;
        height: 31.25%;
        top: 18.75%;
        left: 18.75%;
        background: rgba(255,255,255,0.2)
    }
}

.bubble-rotate-offset {
    width: 100%;
    height: 100%;
    animation: rotate-bubble-offset 15s linear infinite
}

.ball {
    display: inline-block;
    width: 100%;
    height: 100%;
    border-radius: 100%;
    position: relative;
    background: radial-gradient(circle at bottom,#81e8f6,#76deef 10%,#055194 80%,#062745 100%);

    &:before,
    &:after {
        content:"";
        position: absolute;
        border-radius: 100%;
        z-index: 2;
    }
    &:before {
        top: 0;
        left: 0;
        width: 90%;
        height: 90%;
        border-radius: 100%;
        background: radial-gradient(circle at top,white,rgba(255,255,255,0) 58%);
        filter: blur(5px);
    }

    &:after {
        display: none;
        top: 5%;
        left: 10%;
        width: 80%;
        height: 80%;
        border-radius: 100%;
        filter: blur(1px);
        transform: rotateZ(-30deg);
    }
    .shadow {
        position: absolute;
        width: 100%;
        height: 100%;
        background: radial-gradient(circle,rgba(0,0,0,0.4),rgba(0,0,0,0.1) 40%,transparent 50%);
        transform: rotateX(90deg) translateZ(-160px);
        z-index: 1
    }
    &.bubble {
        background: radial-gradient(circle at 50% 55%,rgba(240,245,255,0.9),rgba(240,245,255,0.9) 40%,rgba(225,238,255,0.8) 60%,rgba(43,130,255,0.4));
        animation: bubble-anim 2s ease-out infinite;

        &:before {
            filter: blur(0);
            height: 80%;
            width: 40%;
            background: radial-gradient(circle at 130% 130%,rgba(255,255,255,0) 0,rgba(255,255,255,0) 46%,rgba(255,255,255,0.8) 50%,rgba(255,255,255,0.8) 58%,rgba(255,255,255,0) 60%,rgba(255,255,255,0) 100%);
            transform: translateX(131%) translateY(58%) rotateZ(168deg) rotateX(10deg)
        }
        &:after {
            display: block;
            background: radial-gradient(circle at 50% 80%,rgba(255,255,255,0),rgba(255,255,255,0) 74%,white 80%,white 84%,rgba(255,255,255,0) 100%)
        }
    }
}

@keyframes bubble-anim {
    0% {
        transform: scale(1)
    }

    20% {
        transform: scaleY(0.95) scaleX(1.05)
    }

    48% {
        transform: scaleY(1.1) scaleX(0.9)
    }

    68% {
        transform: scaleY(0.98) scaleX(1.02)
    }

    80% {
        transform: scaleY(1.02) scaleX(0.98)
    }

    97%,100% {
        transform: scale(1)
    }
}

@keyframes move-bubble {
    0% {
        transform: translateX(-50%) rotateZ(-30deg);
        opacity: 0
    }

    10% {
        opacity: 1
    }

    80% {
        opacity: 1
    }

    100% {
        opacity: 0;
        transform: translateX(-50%) rotateZ(30deg)
    }
}

@keyframes rotate-bubble-offset {
    0% {
        transform: rotateZ(30deg)
    }

    100% {
        transform: rotateZ(-30deg)
    }
}

@keyframes move-eye-skew {
    0% {
        transform: none
    }

    20% {
        transform: translateX(-4.25em) translateY(1.875em) skewX(15deg) skewY(-10deg) scale(0.95)
    }

    25%,44% {
        -webkit-transform: none;
        transform: none
    }

    50%,60% {
        transform: translateX(4.25em) translateY(-2.5em) skewX(5deg) skewY(2deg) scaleX(0.95)
    }

    66%,100% {
        transform: none
    }
}
